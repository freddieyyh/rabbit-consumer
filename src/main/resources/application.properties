server.port=8081

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# group? ?? binding? queue? ???? auto-delete? (? ???? ?? ?? ??)
spring.cloud.stream.bindings.afterCreated-in-0.destination=my-data-created
spring.cloud.stream.rabbit.bindings.afterCreated-in-0.consumer.bind-queue=true
spring.cloud.stream.rabbit.bindings.afterCreated-in-0.consumer.declare-exchange=false
spring.cloud.stream.rabbit.bindings.afterCreated-in-0.consumer.anonymous-group-prefix=print-each

# group? ?? binding? ?? ???? ??? ???? ??? queue? ???
spring.cloud.stream.bindings.afterCreatedOnce-in-0.group=print-once
spring.cloud.stream.bindings.afterCreatedOnce-in-0.destination=my-data-created
spring.cloud.stream.rabbit.bindings.afterCreatedOnce-in-0.consumer.bind-queue=true
spring.cloud.stream.rabbit.bindings.afterCreatedOnce-in-0.consumer.declare-exchange=false

# topic?? ???? ???
spring.cloud.stream.bindings.afterDataUpdated-in-0.destination=my-data-changed
spring.cloud.stream.rabbit.bindings.afterDataUpdated-in-0.consumer.bind-queue=true
spring.cloud.stream.rabbit.bindings.afterDataUpdated-in-0.consumer.declare-exchange=false
spring.cloud.stream.rabbit.bindings.afterDataUpdated-in-0.consumer.binding-routing-key=my.data.changed

spring.cloud.stream.bindings.afterOwnerUpdated-in-0.destination=my-data-changed
spring.cloud.stream.rabbit.bindings.afterOwnerUpdated-in-0.consumer.bind-queue=true
spring.cloud.stream.rabbit.bindings.afterOwnerUpdated-in-0.consumer.declare-exchange=false
spring.cloud.stream.rabbit.bindings.afterOwnerUpdated-in-0.consumer.binding-routing-key=my.owner.changed

spring.cloud.stream.bindings.afterDataUpdatedUnicast-in-0.destination=my-data-changed-unicast
spring.cloud.stream.rabbit.bindings.afterDataUpdatedUnicast-in-0.consumer.bind-queue=true
spring.cloud.stream.rabbit.bindings.afterDataUpdatedUnicast-in-0.consumer.declare-exchange=false
spring.cloud.stream.rabbit.bindings.afterDataUpdatedUnicast-in-0.consumer.binding-routing-key=my.data.changed

spring.cloud.function.definition=afterOwnerUpdated;afterDataUpdated;afterCreatedOnce;afterCreated;afterDataUpdatedUnicast;


